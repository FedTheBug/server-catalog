// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/servers/hdd-types": {
            "get": {
                "security": [
                    {
                        "AppKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of all available HDD types in the server catalog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "servers"
                ],
                "summary": "Get HDD types",
                "responses": {
                    "200": {
                        "description": "List of HDD types (e.g., SAS, SATA2, SSD)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unable to fetch HDD types",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/servers/list": {
            "get": {
                "security": [
                    {
                        "AppKeyAuth": []
                    }
                ],
                "description": "Retrieve a paginated list of servers with optional filtering by storage, RAM, HDD type, and location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "servers"
                ],
                "summary": "Get list of servers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number of items per page (default: 10)",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page_no",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Minimum storage (e.g., 1TB)",
                        "name": "min_storage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Maximum storage (e.g., 100TB)",
                        "name": "max_storage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "RAM values (e.g., 2GB,4GB)",
                        "name": "ram",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "HDD type (e.g., SATA2, SAS, SSD)",
                        "name": "hdd_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Server location (e.g., AmsterdamAMS-01)",
                        "name": "location",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of servers with pagination",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.ListServerResp"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/definitions/utils.Page"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "No servers found with the specified filters",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unable to fetch servers",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/servers/locations": {
            "get": {
                "security": [
                    {
                        "AppKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of all available server locations in the catalog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "servers"
                ],
                "summary": "Get server locations",
                "responses": {
                    "200": {
                        "description": "List of server locations",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unable to fetch locations",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/upload": {
            "post": {
                "security": [
                    {
                        "AppKeyAuth": []
                    }
                ],
                "description": "Upload a server catalog file in XLSX format. The file must contain valid server catalog data.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "servers"
                ],
                "summary": "Upload server catalog",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Server catalog file (XLSX format)",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Catalog uploaded successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid file format or upload failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unable to process the file",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ListServerResp": {
            "description": "Server information in the response",
            "type": "object",
            "properties": {
                "hdd": {
                    "type": "string",
                    "example": "4x1TBSATA2"
                },
                "location": {
                    "type": "string",
                    "example": "AmsterdamAMS-01"
                },
                "model": {
                    "type": "string",
                    "example": "HP DL120G7Intel G850"
                },
                "price": {
                    "type": "string",
                    "example": "€39.99"
                },
                "ram": {
                    "type": "string",
                    "example": "4GBDDR3"
                }
            }
        },
        "utils.Page": {
            "description": "Pagination details",
            "type": "object",
            "properties": {
                "page_no": {
                    "type": "integer",
                    "example": 1
                },
                "per_page": {
                    "type": "integer",
                    "example": 10
                },
                "total": {
                    "type": "integer",
                    "example": 486
                }
            }
        },
        "utils.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {},
                "message": {},
                "pagination": {
                    "$ref": "#/definitions/utils.Page"
                }
            }
        }
    },
    "securityDefinitions": {
        "AppKeyAuth": {
            "type": "apiKey",
            "name": "App-key",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Server Catalog API",
	Description:      "A server catalog service API documentation",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
